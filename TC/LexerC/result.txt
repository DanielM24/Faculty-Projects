( Identificator, xe)
( Separator, ,)
( Literal flotant, 12.34e-25)
( Literal string, " ;;kjk 'a'")
( Caracter, '"')
( Operator, *)
( Operator, /)
( Cuvant cheie, int)
( Identificator, main)
( Separator, ()
( Cuvant cheie, int)
( Identificator, argc)
( Separator, ,)
( Cuvant cheie, char)
( Operator, *)
( Identificator, argv)
( Separator, [)
( Separator, ])
( Separator, ))
( Separator, {)
( Cuvant cheie, int)
( Identificator, var1)
( Separator, ,)
( Identificator, e)
( Separator, [)
( Literal intreg, 100)
( Separator, ])
( Separator, [)
( Literal intreg, 20)
( Separator, ])
( Separator, ;)
( Cuvant cheie, if)
( Separator, ()
( Separator, ()
( Identificator, e25)
( Operator, ++)
( Operator, +=)
( Operator, ++)
( Identificator, e)
( Operator, -)
( Literal intreg, 2)
( Operator, &&)
( Literal intreg, 12)
( Identificator, te25)
( Operator, *)
( Operator, *=)
( Identificator, e)
( Operator, >>=)
( Literal intreg, 5)
( Separator, ))
( Operator, +)
( Identificator, e25)
( Identificator, .f12)
( Identificator, .e)
( Operator, --)
( Separator, ))
( Separator, {)
( Separator, ;)
( Separator, ;)
( Separator, ;)
( Separator, })
( Literal flotant, 12.34)
( Operator, -)
( Identificator, e)
( Operator, +)
( Identificator, ee)
( Identificator, .f)
( Separator, ;)
( Cuvant cheie, double)
( Identificator, var2)
( Separator, ;)
( Literal intreg, 12e)
( Identificator, t)
( Cuvant cheie, char)
( Identificator, s)
( Separator, [)
( Literal intreg, 10)
( Separator, ])
( Separator, ;)
( Operator, +)
( Identificator, var1)
( Operator, =)
( Literal hexadecimal, 0x1a0d)
( Separator, ;)
( Identificator, var2)
( Operator, =)
( Literal flotant, 3.141592)
( Separator, ;)
( Identificator, strcpy)
( Separator, ()
( Identificator, s)
( Separator, ,)
( Literal string, "caractere")
( Separator, ))
( Separator, ;)
( Operator, /)
( Operator, /)
( Identificator, acesta)
( Identificator, este)
( Identificator, un)
( Identificator, comentariu)
( Cuvant cheie, if)
( Separator, ()
( Identificator, var1)
( Operator, ==)
( Literal intreg, 0)
( Separator, ))
( Cuvant cheie, return)
( Literal intreg, 1)
( Separator, ;)
( Cuvant cheie, return)
( Literal intreg, 0)
( Separator, ;)
( Separator, })
